"Govrestrict_1","8", TRUE,
"Govrestrict_2","8", TRUE,
"Govrestrict_3","8", TRUE )
country_df <- tibble::tribble( ~Residency, ~ji_name, ~countryname_en, ~countryname_se,
"AU", "australia", "Australia", "Australien",
"DE", "de", "Germany", "Tyskland",
"ES", "es", "Spain", "Spanien",
"UK", "gb", "UK", "Storbritannien",
"IT", "it", "Italy", "Italien",
"MX", "mexico","Mexico", "Mexico",
"SE", "sweden", "Sweden", "Sverige",
"KR", "kr", "South Korea", "Sydkorea",
"JP", "jp", "Japan", "Japan",
"CN", "cn", "China", "Kina",
"US", "us", "USA", "USA" )
country_df <- country_df %>%
pivot_longer(starts_with("countryname_"), names_to = "language",
names_prefix = "countryname_", values_to = "countryname") %>%
filter(language==lang) %>%
select(-language) %>%
mutate(countryflag=map_chr(ji_name, emo::ji))
wrap_txt <- function(x, w=80){
paste(strwrap(x,
width = w
),
collapse = "\n")
}
# Prepare labels for annotating plots
q_df_raw <- dt %>% slice(1:3) %>% select(-version) %>%
tibble::rowid_to_column(var = "row_id") %>%
pivot_longer(-row_id, names_to = "var", values_to = "txt_en") %>%
arrange(var, row_id)
write_csv(q_df_raw, "data/q_df_raw_en.csv")
q_df <- read_csv("data/q_df_en_se.csv")
q_df <- q_df %>%
pivot_longer(starts_with("txt"), names_to = "language",
names_prefix = "txt_", values_to = "question") %>%
filter(language==lang)%>%
select(-language) %>%
replace_na(list(question=""))
lbl_df_raw <- dt %>% slice(4) %>% select(-version) %>%
map(str_replace, " to (?=\\d)| - (?=\\d)", ", ") %>%
map(str_replace_all, "(?<=\\d\\s)\\(", " = ") %>%
map_df(~enframe(str_split(.x, ",\\s+(?=\\d)")[[1]] ), .id = "var") %>%
select(-name) %>%
separate(value, sep="\\s?+=\\s?+", into=c("code", "label"), extra="merge", convert=TRUE) %>%
mutate(label=str_replace(label, "\\)$", ""),
label=str_replace_all(label, "'", ""),
label=trimws(label)) %>%
mutate(code=as.character(code))
write_csv(lbl_df_raw, "data/lbl_df_raw_en.csv")
lbl_df <- read_csv("data/lbl_df_en_sv.csv")
lbl_df <- lbl_df %>%
pivot_longer(starts_with("label"), names_to = "language",
names_prefix = "label_", values_to = "label") %>%
filter(language==lang)%>%
select(-language) %>%
anti_join(type_convert(msng_df), by=c("var", "code"))
# Prepare data
df_lng_raw <- dt %>%
slice(-1:-4) %>%
tibble::rowid_to_column() %>%
pivot_longer(cols = GenSocTrust:Politics, names_to = "var", values_to = "code") %>%
left_join(msng_df, by=c("var", "code")) %>%
replace_na(list(msng=FALSE))
write_csv(df_lng_raw, "data/df_long_raw.csv")
data_df <- df_lng_raw %>%
mutate(code=ifelse(msng, NA, code),
code_num = parse_number(code)) %>%
count(var, Residency, code, code_num) %>%
group_by(var) %>%
mutate(mid_category_num = ceiling(mean(code_num, na.rm = TRUE))) %>%
group_by(var, Residency) %>%
mutate(nna_n=ifelse(!is.na(code), n, NA),
pct=n/sum(n),
nna_pct = nna_n/sum(nna_n, na.rm=TRUE),
sgnd_pct=ifelse(code_num >= mid_category_num, pct, -pct),
nna_sgnd_pct=ifelse(code_num >= mid_category_num, nna_pct, -nna_pct),
sum_pct_low = -sum(pct * (code_num < mid_category_num), na.rm = TRUE),
sum_pct_hi = sum(pct * (code_num > mid_category_num), na.rm = TRUE),
panel=case_when(
is.na(code_num) ~ "Missing",
code_num == mid_category_num ~ "Neutral",
TRUE ~ "Responses")
) %>%
ungroup() %>%
left_join(country_df, by="Residency")
write.csv(data_df,"data.csv", row.names = FALSE)
write.csv(q_df,"q", row.names = FALSE)
write.csv(lbl_df,"lbl", row.names = FALSE)
library(tidyverse)
library(hrbrthemes)
library(tidybayes)
#remotes::install_github("hadley/emo")
library(emo)
library(gt)
#dt <- read_csv("data/WintonCentreCleaned_covid_8country_labelled.csv")
dt <- read_csv("data/WintonCentreCleaned_covid_11country_plusUK2_labelled.csv")
# Make a small df with codes corresponding to missing values
msng_df <- tibble::tribble(~var, ~code, ~msng,
"Ethnic min", "4",  TRUE,
"Govrestrict_1","8", TRUE,
"Govrestrict_2","8", TRUE,
"Govrestrict_3","8", TRUE )
country_df <- tibble::tribble( ~Residency, ~ji_name, ~countryname_en, ~countryname_se,
"AU", "australia", "Australia", "Australien",
"DE", "de", "Germany", "Tyskland",
"ES", "es", "Spain", "Spanien",
"UK", "gb", "UK", "Storbritannien",
"IT", "it", "Italy", "Italien",
"MX", "mexico","Mexico", "Mexico",
"SE", "sweden", "Sweden", "Sverige",
"KR", "kr", "South Korea", "Sydkorea",
"JP", "jp", "Japan", "Japan",
"CN", "cn", "China", "Kina",
"US", "us", "USA", "USA" )
country_df <- country_df %>%
pivot_longer(starts_with("countryname_"), names_to = "language",
names_prefix = "countryname_", values_to = "countryname") %>%
filter(language==lang) %>%
select(-language) %>%
mutate(countryflag=map_chr(ji_name, emo::ji))
wrap_txt <- function(x, w=80){
paste(strwrap(x,
width = w
),
collapse = "\n")
}
# Prepare labels for annotating plots
q_df_raw <- dt %>% slice(1:3) %>% select(-version) %>%
tibble::rowid_to_column(var = "row_id") %>%
pivot_longer(-row_id, names_to = "var", values_to = "txt_en") %>%
arrange(var, row_id)
write_csv(q_df_raw, "data/q_df_raw_en.csv")
q_df <- read_csv("data/q_df_en_se.csv")
q_df <- q_df %>%
pivot_longer(starts_with("txt"), names_to = "language",
names_prefix = "txt_", values_to = "question") %>%
filter(language==lang)%>%
select(-language) %>%
replace_na(list(question=""))
lbl_df_raw <- dt %>% slice(4) %>% select(-version) %>%
map(str_replace, " to (?=\\d)| - (?=\\d)", ", ") %>%
map(str_replace_all, "(?<=\\d\\s)\\(", " = ") %>%
map_df(~enframe(str_split(.x, ",\\s+(?=\\d)")[[1]] ), .id = "var") %>%
select(-name) %>%
separate(value, sep="\\s?+=\\s?+", into=c("code", "label"), extra="merge", convert=TRUE) %>%
mutate(label=str_replace(label, "\\)$", ""),
label=str_replace_all(label, "'", ""),
label=trimws(label)) %>%
mutate(code=as.character(code))
write_csv(lbl_df_raw, "data/lbl_df_raw_en.csv")
lbl_df <- read_csv("data/lbl_df_en_sv.csv")
lbl_df <- lbl_df %>%
pivot_longer(starts_with("label"), names_to = "language",
names_prefix = "label_", values_to = "label") %>%
filter(language==lang)%>%
select(-language) %>%
anti_join(type_convert(msng_df), by=c("var", "code"))
# Prepare data
df_lng_raw <- dt %>%
slice(-1:-4) %>%
tibble::rowid_to_column() %>%
pivot_longer(cols = GenSocTrust:Politics, names_to = "var", values_to = "code") %>%
left_join(msng_df, by=c("var", "code")) %>%
replace_na(list(msng=FALSE))
write_csv(df_lng_raw, "data/df_long_raw.csv")
data_df <- df_lng_raw %>%
mutate(code=ifelse(msng, NA, code),
code_num = parse_number(code)) %>%
count(var, Residency, code, code_num) %>%
group_by(var) %>%
mutate(mid_category_num = ceiling(mean(code_num, na.rm = TRUE))) %>%
group_by(var, Residency) %>%
mutate(nna_n=ifelse(!is.na(code), n, NA),
pct=n/sum(n),
nna_pct = nna_n/sum(nna_n, na.rm=TRUE),
sgnd_pct=ifelse(code_num >= mid_category_num, pct, -pct),
nna_sgnd_pct=ifelse(code_num >= mid_category_num, nna_pct, -nna_pct),
sum_pct_low = -sum(pct * (code_num < mid_category_num), na.rm = TRUE),
sum_pct_hi = sum(pct * (code_num > mid_category_num), na.rm = TRUE),
panel=case_when(
is.na(code_num) ~ "Missing",
code_num == mid_category_num ~ "Neutral",
TRUE ~ "Responses")
) %>%
ungroup() %>%
left_join(country_df, by="Residency")
write.csv(data_df,"data.csv", row.names = FALSE)
write.csv(q_df,"q.csv", row.names = FALSE)
write.csv(lbl_df,"lbl.csv", row.names = FALSE)
df_lng_raw %>%
head()
library(tidyverse)
library(hrbrthemes)
library(tidybayes)
#remotes::install_github("hadley/emo")
library(emo)
library(gt)
#dt <- read_csv("data/WintonCentreCleaned_covid_8country_labelled.csv")
dt <- read_csv("data/WintonCentreCleaned_covid_11country_plusUK2_labelled.csv")
# Make a small df with codes corresponding to missing values
msng_df <- tibble::tribble(~var, ~code, ~msng,
"Ethnic min", "4",  TRUE,
"Govrestrict_1","8", TRUE,
"Govrestrict_2","8", TRUE,
"Govrestrict_3","8", TRUE )
country_df <- tibble::tribble( ~Residency, ~ji_name, ~countryname_en, ~countryname_se,
"AU", "australia", "Australia", "Australien",
"DE", "de", "Germany", "Tyskland",
"ES", "es", "Spain", "Spanien",
"UK", "gb", "UK", "Storbritannien",
"IT", "it", "Italy", "Italien",
"MX", "mexico","Mexico", "Mexico",
"SE", "sweden", "Sweden", "Sverige",
"KR", "kr", "South Korea", "Sydkorea",
"JP", "jp", "Japan", "Japan",
"CN", "cn", "China", "Kina",
"US", "us", "USA", "USA" )
country_df <- country_df %>%
pivot_longer(starts_with("countryname_"), names_to = "language",
names_prefix = "countryname_", values_to = "countryname") %>%
filter(language==lang) %>%
select(-language) %>%
mutate(countryflag=map_chr(ji_name, emo::ji))
wrap_txt <- function(x, w=80){
paste(strwrap(x,
width = w
),
collapse = "\n")
}
# Prepare labels for annotating plots
q_df_raw <- dt %>% slice(1:3) %>% select(-version) %>%
tibble::rowid_to_column(var = "row_id") %>%
pivot_longer(-row_id, names_to = "var", values_to = "txt_en") %>%
arrange(var, row_id)
write_csv(q_df_raw, "data/q_df_raw_en.csv")
q_df <- read_csv("data/q_df_en_se.csv")
q_df <- q_df %>%
pivot_longer(starts_with("txt"), names_to = "language",
names_prefix = "txt_", values_to = "question") %>%
filter(language==lang)%>%
select(-language) %>%
replace_na(list(question=""))
lbl_df_raw <- dt %>% slice(4) %>% select(-version) %>%
map(str_replace, " to (?=\\d)| - (?=\\d)", ", ") %>%
map(str_replace_all, "(?<=\\d\\s)\\(", " = ") %>%
map_df(~enframe(str_split(.x, ",\\s+(?=\\d)")[[1]] ), .id = "var") %>%
select(-name) %>%
separate(value, sep="\\s?+=\\s?+", into=c("code", "label"), extra="merge", convert=TRUE) %>%
mutate(label=str_replace(label, "\\)$", ""),
label=str_replace_all(label, "'", ""),
label=trimws(label)) %>%
mutate(code=as.character(code))
write_csv(lbl_df_raw, "data/lbl_df_raw_en.csv")
lbl_df <- read_csv("data/lbl_df_en_sv.csv")
lbl_df <- lbl_df %>%
pivot_longer(starts_with("label"), names_to = "language",
names_prefix = "label_", values_to = "label") %>%
filter(language==lang)%>%
select(-language) %>%
anti_join(type_convert(msng_df), by=c("var", "code"))
# Prepare data
df_lng_raw <- dt %>%
slice(-1:-4) %>%
tibble::rowid_to_column() %>%
pivot_longer(cols = GenSocTrust:Politics, names_to = "var", values_to = "code") %>%
left_join(msng_df, by=c("var", "code")) %>%
replace_na(list(msng=FALSE))
write_csv(df_lng_raw, "data/df_long_raw.csv")
data_df <- df_lng_raw %>%
mutate(code=ifelse(msng, NA, code),
code_num = parse_number(code)) %>%
count(var, Residency, code, code_num) %>%
group_by(var) %>%
mutate(mid_category_num = ceiling(mean(code_num, na.rm = TRUE))) %>%
group_by(var, Residency) %>%
mutate(nna_n=ifelse(!is.na(code), n, NA),
pct=n/sum(n),
nna_pct = nna_n/sum(nna_n, na.rm=TRUE),
sgnd_pct=ifelse(code_num >= mid_category_num, pct, -pct),
nna_sgnd_pct=ifelse(code_num >= mid_category_num, nna_pct, -nna_pct),
sum_pct_low = -sum(pct * (code_num < mid_category_num), na.rm = TRUE),
sum_pct_hi = sum(pct * (code_num > mid_category_num), na.rm = TRUE),
panel=case_when(
is.na(code_num) ~ "Missing",
code_num == mid_category_num ~ "Neutral",
TRUE ~ "Responses")
) %>%
ungroup() %>%
left_join(country_df, by="Residency")
write.csv(q_df,"q.csv", row.names = FALSE)
write.csv(lbl_df,"lbl.csv", row.names = FALSE)
write.csv(df_lng_raw,'data.csv', row.names = FALSE)
library(dplyr)
library(purrr)
library(ggplot2)
library(ISLR)
data(Khan)
# train_data contains 2308 gene expression measurements for 63 samples
train_data <- Khan %>% pluck('xtrain')
# Rename the variables to be gene1, gene2, etc.
colnames(train_data) <- paste0("gene", seq_len(ncol(train_data)))
# train_labels contains information on which of 4 cancer subtypes each sample comes from
train_labels <- Khan %>% pluck('ytrain')
data_index = fromJSON(file='data_index_orient.json')
library(readr)
library(ggplot2)
library(dplyr)
library(tidymodels)
library(rjson)
tidymodels_prefer()
data_index = fromJSON(file='data_index_orient.json')
data_column = fromJSON(file='data_column_orient.json')
what_questions_are = read.csv('what_questions_are.csv')
what_questions_are = read.csv(file = 'what_questions_are.csv')
library(readr)
library(ggplot2)
library(dplyr)
library(tidymodels)
library(rjson)
tidymodels_prefer()
stringency_data <- read.csv('covid-stringency-index.csv')
all_data <- read.csv('owid-covid-data.csv')
isl_swe_data <- all_data %>%
filter(iso_code=="SWE"|iso_code=='ISL')
all_data %>%
ggplot(aes(x=date,y=new_cases_smoothed_per_million, color=continent)) +
geom_point()
lm_spec <-
linear_reg() %>%
set_engine(engine = 'lm') %>%
set_mode('regression')
mod1 <- fit(lm_spec,
total_deaths ~ stringency_index + population,
data = all_data)
mod1 %>%
pluck()
what_questions_are = read.csv(file = 'what_questions_are.csv')
setwd("~/GitHub/POLI_269_Coivd19_Research")
what_questions_are = read.csv(file = 'what_questions_are.csv')
what_questions_are = read.csv(file = 'what_questsions_are.csv')
what_answer_codes_mean = read.csv(file = 'what_answer_codes_mean.csv')
data_index$Govresponse_6
data_index$Govresponse_6$IT
data_index$Govresponse_6$IT %>%
as.numeric()
data_index$Govresponse_6$IT %>%
as.numeric() %>%
summarise()
data_index$Govresponse_6$IT %>%
as.numeric()
data_index$Govresponse_6$IT %>%
as.numeric() %>%
average()
data_index$Govresponse_6$IT %>%
as.numeric() %>%
mean()
data_index$Govresponse_6$IT %>%
as.numeric() %>%
mean()
what_questions_are$Govresponse_6
data_index$Govresponse_6$IT %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var=='Govresponse_6')
data_index$Govresponse_6$IT %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var=='Govresponse_6')$question
data_index$Govresponse_6$IT %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var=='Govresponse_6') %>%
select('question')
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6$country %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6$country %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('label)
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6$country %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('label')
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6$country %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('code', 'label')
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6$IT %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('code', 'label')
country = IT
country = IT
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6$country %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('code', 'label')
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6 %>%
select(country)
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6 %>%
select('IT') %>%
as.numeric() %>%
mean()
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6[IT] %>%
as.numeric() %>%
mean()
country = data_index$Govresponse_6$IT
quest = 'Govresponse_6'
country %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('code', 'label')
country = data_index$Govresponse_6$IT
quest = 'Govresponse_6'
data_index$Govresponse_6.get(IT) %>%
as.numeric() %>%
mean()
country = data_index$Govresponse_6$IT
quest = 'Govresponse_6'
data_index$Govresponse_6[[IT]] %>%
as.numeric() %>%
mean()
country = data_index$Govresponse_6$IT
quest = 'Govresponse_6'
data_index$Govresponse_6[['IT']] %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('code', 'label')
country = 'IT'
quest = 'Govresponse_6'
data_index$Govresponse_6[[country]] %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('code', 'label')
country = 'IT'
quest = 'Govresponse_6'
data_index[[quest]][[country]] %>%
as.numeric() %>%
mean()
what_questions_are %>%
filter(var==quest) %>%
select('question')
what_answer_codes_mean %>%
filter(var == quest) %>%
select('code', 'label')
